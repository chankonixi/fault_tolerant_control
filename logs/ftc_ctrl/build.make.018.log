[  0%] Built target trajectory_msgs_generate_messages_eus
[  0%] Built target tf2_msgs_generate_messages_nodejs
[  0%] Built target trajectory_msgs_generate_messages_lisp
[  0%] Built target trajectory_msgs_generate_messages_py
[  0%] Built target diagnostic_msgs_generate_messages_nodejs
[  0%] Built target geometry_msgs_generate_messages_lisp
[  0%] Built target quad_msgs_generate_messages_lisp
[  0%] Built target uuid_msgs_generate_messages_lisp
[  0%] Built target roscpp_generate_messages_py
[  0%] Built target diagnostic_msgs_generate_messages_py
[  0%] Built target trajectory_msgs_generate_messages_nodejs
[  0%] Built target uuid_msgs_generate_messages_eus
[  0%] Built target diagnostic_msgs_generate_messages_lisp
[  0%] Built target mavros_msgs_generate_messages_nodejs
[  0%] Built target std_msgs_generate_messages_nodejs
[  0%] Built target nav_msgs_generate_messages_nodejs
[  0%] Built target actionlib_msgs_generate_messages_lisp
[  0%] Built target roscpp_generate_messages_lisp
[  0%] Built target std_msgs_generate_messages_py
[  0%] Built target actionlib_msgs_generate_messages_nodejs
[  0%] Built target std_msgs_generate_messages_cpp
[  0%] Built target diagnostic_msgs_generate_messages_eus
[  0%] Built target quad_msgs_generate_messages_cpp
[  0%] Built target quad_msgs_generate_messages_eus
[  0%] Built target geometry_msgs_generate_messages_nodejs
[  0%] Built target geographic_msgs_generate_messages_py
[  0%] Built target rosgraph_msgs_generate_messages_lisp
[  0%] Built target roscpp_generate_messages_cpp
[  0%] Built target sensor_msgs_generate_messages_nodejs
[  0%] Built target actionlib_generate_messages_cpp
[  0%] Built target rosgraph_msgs_generate_messages_cpp
[  0%] Built target std_msgs_generate_messages_lisp
[  0%] Built target sensor_msgs_generate_messages_eus
[  0%] Built target geometry_msgs_generate_messages_eus
[  0%] Built target std_msgs_generate_messages_eus
[  0%] Built target roscpp_generate_messages_nodejs
[  0%] Built target rosgraph_msgs_generate_messages_nodejs
[  0%] Built target geographic_msgs_generate_messages_lisp
[  0%] Built target rosgraph_msgs_generate_messages_eus
[  0%] Built target quad_msgs_generate_messages_py
[  0%] Built target geometry_msgs_generate_messages_py
[  0%] Built target geographic_msgs_generate_messages_cpp
[  0%] Built target geographic_msgs_generate_messages_eus
[  0%] Built target geographic_msgs_generate_messages_nodejs
[  0%] Built target trajectory_msgs_generate_messages_cpp
[  0%] Built target uuid_msgs_generate_messages_nodejs
[  0%] Built target mavros_msgs_generate_messages_eus
[  0%] Built target actionlib_generate_messages_nodejs
[  0%] Built target uuid_msgs_generate_messages_py
[  0%] Built target uuid_msgs_generate_messages_cpp
[  0%] Built target sensor_msgs_generate_messages_lisp
[  0%] Built target mavros_msgs_generate_messages_py
[  0%] Built target sensor_msgs_generate_messages_cpp
[  0%] Built target mavros_msgs_generate_messages_cpp
[  0%] Built target mavros_msgs_generate_messages_lisp
[  0%] Built target nav_msgs_generate_messages_cpp
[  0%] Built target nav_msgs_generate_messages_lisp
[  0%] Built target rosgraph_msgs_generate_messages_py
[  0%] Built target roscpp_generate_messages_eus
[  0%] Built target actionlib_msgs_generate_messages_py
[  0%] Built target sensor_msgs_generate_messages_py
[  0%] Built target actionlib_msgs_generate_messages_eus
[  0%] Built target actionlib_generate_messages_eus
[  0%] Built target diagnostic_msgs_generate_messages_cpp
[  0%] Built target quad_msgs_generate_messages_nodejs
[  0%] Built target actionlib_msgs_generate_messages_cpp
[  0%] Built target tf2_msgs_generate_messages_cpp
[  0%] Built target geometry_msgs_generate_messages_cpp
[  0%] Built target actionlib_generate_messages_lisp
[  0%] Built target nav_msgs_generate_messages_eus
[  0%] Built target tf2_msgs_generate_messages_eus
[  0%] Built target nav_msgs_generate_messages_py
[  0%] Built target actionlib_generate_messages_py
[  0%] Built target tf2_msgs_generate_messages_lisp
[  0%] Built target tf2_msgs_generate_messages_py
[35m[1mScanning dependencies of target ftc_ctrl[0m
[ 25%] [32mBuilding CXX object CMakeFiles/ftc_ctrl.dir/src/ftc_ctrl_node.cpp.o[0m
[ 50%] [32mBuilding CXX object CMakeFiles/ftc_ctrl.dir/src/ftc_ctrl.cpp.o[0m
[01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:[m[K In member function â€˜[01m[Kvoid ftc::NDICtrl::RungeKuttaProgess(const Vector3d&, Eigen::Vector3d, const Vector3d&, Eigen::Vector3d)[m[Kâ€™:
[01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:622:11:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kconst Vector3d {aka const Eigen::Matrix<double, 3, 1>}[m[Kâ€™ and â€˜[01m[KEigen::Vector3d {aka Eigen::Matrix<double, 3, 1>}[m[Kâ€™)
     Rx_in=[01;31m[KRx_out[m[K;                                         Ry_in=Ry_out;
           [01;31m[K^~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:438:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/include/ftc_ctrl/ftc_ctrl.h:31[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:22[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:206:33:[m[K [01;36m[Knote: [m[Kcandidate: Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1] <near match>
     EIGEN_STRONG_INLINE Matrix& [01;36m[Koperator[m[K=(const Matrix& other)
                                 [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:206:33:[m[K [01;36m[Knote: [m[K  passing â€˜[01m[Kconst Vector3d* {aka const Eigen::Matrix<double, 3, 1>*}[m[Kâ€™ as â€˜[01m[Kthis[m[Kâ€™ argument discards qualifiers
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:223:33:[m[K [01;36m[Knote: [m[Kcandidate: Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1] <near match>
     EIGEN_STRONG_INLINE Matrix& [01;36m[Koperator[m[K=(const DenseBase<OtherDerived>& other)
                                 [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:223:33:[m[K [01;36m[Knote: [m[K  passing â€˜[01m[Kconst Vector3d* {aka const Eigen::Matrix<double, 3, 1>*}[m[Kâ€™ as â€˜[01m[Kthis[m[Kâ€™ argument discards qualifiers
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:236:33:[m[K [01;36m[Knote: [m[Kcandidate: Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1] <near match>
     EIGEN_STRONG_INLINE Matrix& [01;36m[Koperator[m[K=(const EigenBase<OtherDerived> &other)
                                 [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:236:33:[m[K [01;36m[Knote: [m[K  passing â€˜[01m[Kconst Vector3d* {aka const Eigen::Matrix<double, 3, 1>*}[m[Kâ€™ as â€˜[01m[Kthis[m[Kâ€™ argument discards qualifiers
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:243:33:[m[K [01;36m[Knote: [m[Kcandidate: template<class OtherDerived> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = OtherDerived; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]
     EIGEN_STRONG_INLINE Matrix& [01;36m[Koperator[m[K=(const ReturnByValue<OtherDerived>& func)
                                 [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:243:33:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:622:11:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::Vector3d {aka Eigen::Matrix<double, 3, 1>}[m[Kâ€™ is not derived from â€˜[01m[Kconst Eigen::ReturnByValue<Derived>[m[Kâ€™
     Rx_in=[01;36m[KRx_out[m[K;                                         Ry_in=Ry_out;
           [01;36m[K^~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:438:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/include/ftc_ctrl/ftc_ctrl.h:31[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:22[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:281:13:[m[K [01;36m[Knote: [m[Kcandidate: Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1] <near match>
     Matrix& [01;36m[Koperator[m[K=(Matrix&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_assignable<Scalar>::value)
             [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:281:13:[m[K [01;36m[Knote: [m[K  conversion of argument 1 would be ill-formed:
[01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:622:11:[m[K [01;31m[Kerror: [m[Kcannot bind rvalue reference of type â€˜[01m[KEigen::Matrix<double, 3, 1>&&[m[Kâ€™ to lvalue of type â€˜[01m[KEigen::Vector3d {aka Eigen::Matrix<double, 3, 1>}[m[Kâ€™
     Rx_in=[01;31m[KRx_out[m[K;                                         Ry_in=Ry_out;
           [01;31m[K^~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:438:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/include/ftc_ctrl/ftc_ctrl.h:31[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:22[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:392:13:[m[K [01;36m[Knote: [m[Kcandidate: template<class OtherDerived> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::RotationBase<OtherDerived, ColsAtCompileTime>&) [with OtherDerived = OtherDerived; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]
     Matrix& [01;36m[Koperator[m[K=(const RotationBase<OtherDerived,ColsAtCompileTime>& r);
             [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:392:13:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:622:11:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::Vector3d {aka Eigen::Matrix<double, 3, 1>}[m[Kâ€™ is not derived from â€˜[01m[Kconst Eigen::RotationBase<OtherDerived, 1>[m[Kâ€™
     Rx_in=[01;36m[KRx_out[m[K;                                         Ry_in=Ry_out;
           [01;36m[K^~~~~~[m[K
[01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:622:65:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kconst Vector3d {aka const Eigen::Matrix<double, 3, 1>}[m[Kâ€™ and â€˜[01m[KEigen::Vector3d {aka Eigen::Matrix<double, 3, 1>}[m[Kâ€™)
     Rx_in=Rx_out;                                         Ry_in=[01;31m[KRy_out[m[K;
                                                                 [01;31m[K^~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:438:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/include/ftc_ctrl/ftc_ctrl.h:31[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:22[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:206:33:[m[K [01;36m[Knote: [m[Kcandidate: Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1] <near match>
     EIGEN_STRONG_INLINE Matrix& [01;36m[Koperator[m[K=(const Matrix& other)
                                 [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:206:33:[m[K [01;36m[Knote: [m[K  passing â€˜[01m[Kconst Vector3d* {aka const Eigen::Matrix<double, 3, 1>*}[m[Kâ€™ as â€˜[01m[Kthis[m[Kâ€™ argument discards qualifiers
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:223:33:[m[K [01;36m[Knote: [m[Kcandidate: Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1] <near match>
     EIGEN_STRONG_INLINE Matrix& [01;36m[Koperator[m[K=(const DenseBase<OtherDerived>& other)
                                 [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:223:33:[m[K [01;36m[Knote: [m[K  passing â€˜[01m[Kconst Vector3d* {aka const Eigen::Matrix<double, 3, 1>*}[m[Kâ€™ as â€˜[01m[Kthis[m[Kâ€™ argument discards qualifiers
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:236:33:[m[K [01;36m[Knote: [m[Kcandidate: Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1] <near match>
     EIGEN_STRONG_INLINE Matrix& [01;36m[Koperator[m[K=(const EigenBase<OtherDerived> &other)
                                 [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:236:33:[m[K [01;36m[Knote: [m[K  passing â€˜[01m[Kconst Vector3d* {aka const Eigen::Matrix<double, 3, 1>*}[m[Kâ€™ as â€˜[01m[Kthis[m[Kâ€™ argument discards qualifiers
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:243:33:[m[K [01;36m[Knote: [m[Kcandidate: template<class OtherDerived> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = OtherDerived; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]
     EIGEN_STRONG_INLINE Matrix& [01;36m[Koperator[m[K=(const ReturnByValue<OtherDerived>& func)
                                 [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:243:33:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:622:65:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::Vector3d {aka Eigen::Matrix<double, 3, 1>}[m[Kâ€™ is not derived from â€˜[01m[Kconst Eigen::ReturnByValue<Derived>[m[Kâ€™
     Rx_in=Rx_out;                                         Ry_in=[01;36m[KRy_out[m[K;
                                                                 [01;36m[K^~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:438:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/include/ftc_ctrl/ftc_ctrl.h:31[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:22[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:281:13:[m[K [01;36m[Knote: [m[Kcandidate: Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1] <near match>
     Matrix& [01;36m[Koperator[m[K=(Matrix&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_assignable<Scalar>::value)
             [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:281:13:[m[K [01;36m[Knote: [m[K  conversion of argument 1 would be ill-formed:
[01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:622:65:[m[K [01;31m[Kerror: [m[Kcannot bind rvalue reference of type â€˜[01m[KEigen::Matrix<double, 3, 1>&&[m[Kâ€™ to lvalue of type â€˜[01m[KEigen::Vector3d {aka Eigen::Matrix<double, 3, 1>}[m[Kâ€™
     Rx_in=Rx_out;                                         Ry_in=[01;31m[KRy_out[m[K;
                                                                 [01;31m[K^~~~~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:438:0[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/include/ftc_ctrl/ftc_ctrl.h:31[m[K,
                 from [01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:22[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:392:13:[m[K [01;36m[Knote: [m[Kcandidate: template<class OtherDerived> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::RotationBase<OtherDerived, ColsAtCompileTime>&) [with OtherDerived = OtherDerived; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]
     Matrix& [01;36m[Koperator[m[K=(const RotationBase<OtherDerived,ColsAtCompileTime>& r);
             [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:392:13:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/cheng/fault_tolerant_control/src/ftc_ctrl/src/ftc_ctrl.cpp:622:65:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::Vector3d {aka Eigen::Matrix<double, 3, 1>}[m[Kâ€™ is not derived from â€˜[01m[Kconst Eigen::RotationBase<OtherDerived, 1>[m[Kâ€™
     Rx_in=Rx_out;                                         Ry_in=[01;36m[KRy_out[m[K;
                                                                 [01;36m[K^~~~~~[m[K
CMakeFiles/ftc_ctrl.dir/build.make:94: recipe for target 'CMakeFiles/ftc_ctrl.dir/src/ftc_ctrl.cpp.o' failed
make[2]: *** [CMakeFiles/ftc_ctrl.dir/src/ftc_ctrl.cpp.o] Error 1
CMakeFiles/Makefile2:633: recipe for target 'CMakeFiles/ftc_ctrl.dir/all' failed
make[1]: *** [CMakeFiles/ftc_ctrl.dir/all] Error 2
Makefile:159: recipe for target 'all' failed
make: *** [all] Error 2
